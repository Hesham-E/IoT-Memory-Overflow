GithubID,Year,FullPath,Codesnippet,CWE,isTrueVulnerable,Codesnippet5
2021\aws-edukit-example\components\core2forAWS\tft\lvgl\lvgl\src\lv_widgets\lv_dropdown.c,Dataset Download,../../Dataset Download/2021\aws-edukit-example\components\core2forAWS\tft\lvgl\lvgl\src\lv_widgets\lv_dropdown.c,"strcat(ins_buf, ""\n"");",120,1,"    strcpy(ins_buf, option);
    if(pos < ext->option_cnt)
        strcat(ins_buf, ""\n"");
    _lv_txt_ins(ext->options, _lv_txt_encoded_get_char_id(ext->options, insert_pos), ins_buf);
    _lv_mem_buf_release(ins_buf);
"
2021\CircusESP01Lib\src\CircusESP01Lib.cpp,Dataset Download,../../Dataset Download/2021\CircusESP01Lib\src\CircusESP01Lib.cpp,"strcat(body, ""{\""Key\"":\""""); strcat(body, key);",120,1,"	for( int i = 0; i < sizeof(body);  ++i )
        	body[i] = (char)0;
    	strcat(body, ""{\""Key\"":\""""); strcat(body, key);
    	strcat(body, ""\"",\""Value\"":""); strcat(body, bufValue);
    	strcat(body, "",\""Token\"":\""""); strcat(body, _token); strcat(body, ""\""}"");
"
2021\CircusESP01Lib\src\CircusESP01Lib.cpp,Dataset Download,../../Dataset Download/2021\CircusESP01Lib\src\CircusESP01Lib.cpp,"strcat(body, "",\""Token\"":\""""); strcat(body, _token); strcat(body, ""\""}"");",120,1,"    	strcat(body, ""{\""Key\"":\""""); strcat(body, key);
    	strcat(body, ""\"",\""Value\"":""); strcat(body, bufValue);
    	strcat(body, "",\""Token\"":\""""); strcat(body, _token); strcat(body, ""\""}"");
	int countBody = count(body);
	char countBodyCharArray[16];
"
2021\cslim\test\libglusterfs\call-stub.cpp.c,Dataset Download,../../Dataset Download/2021\cslim\test\libglusterfs\call-stub.cpp.c,"extern char *strcat (char *__restrict __dest, const char *__restrict __src)",120,1,"

extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

"
2021\cslim\test\libglusterfs\options.cpp.c,Dataset Download,../../Dataset Download/2021\cslim\test\libglusterfs\options.cpp.c,"strcat (given_array, opt->value[i]);",120,1,"
        for (i = 0; (i < 64) && opt->value[i];) {
                strcat (given_array, opt->value[i]);
                if (((++i) < 64) &&
                    (opt->value[i]))
"
2021\cslim\test\libglusterfs\syscall.cpp.c,Dataset Download,../../Dataset Download/2021\cslim\test\libglusterfs\syscall.cpp.c,"strcat(*newkey, key);",120,1,"                                                      ;
                strcpy(*newkey, ns);
                strcat(*newkey, key);
        } else {
                *newkey = gf_strdup(key);
"
2021\ESP32WiFiSnifferApp\ESP32WiFiSnifferApp\src\interactSD.cpp,Dataset Download,../../Dataset Download/2021\ESP32WiFiSnifferApp\ESP32WiFiSnifferApp\src\interactSD.cpp,"strcat( dataMessage, uint32_to_string( data.timestamp ).c_str() );",120,1,"    char dataMessage[50] = """";

    strcat( dataMessage, uint32_to_string( data.timestamp ).c_str() ); 
    strcat( dataMessage, "","" );  

"
2021\fusor-node-connector\src\NodeConnector.cpp,Dataset Download,../../Dataset Download/2021\fusor-node-connector\src\NodeConnector.cpp,"strcat((char *)_postUrl, nodeId);",120,1,"  strcpy((char *)_postUrl, _hubAddress);
  strcat((char *)_postUrl, ENDPOINT_NODE);
  strcat((char *)_postUrl, nodeId);
  strcat((char *)_postUrl, ENDPOINT_PARAM_BATCH);
}
"
2021\fusor-node-connector\src\NodeConnector.cpp,Dataset Download,../../Dataset Download/2021\fusor-node-connector\src\NodeConnector.cpp,"strcat((char *)_postUrl, ENDPOINT_PARAM_BATCH);",120,1,"  strcat((char *)_postUrl, ENDPOINT_NODE);
  strcat((char *)_postUrl, nodeId);
  strcat((char *)_postUrl, ENDPOINT_PARAM_BATCH);
}

"
2021\fusor-node-connector\src\SyncInOptions\SyncInOptions.cpp,Dataset Download,../../Dataset Download/2021\fusor-node-connector\src\SyncInOptions\SyncInOptions.cpp,"strcat(url, (char *)(count++ ? ""&"" : ""?""));",120,1,"        if (strlen(fieldName) > 0)
        {
            strcat(url, (char *)(count++ ? ""&"" : ""?""));
            strcat(url, fieldName);
        }
"
2021\haas-mini-program\components\das\src\service\service_fscan.c,Dataset Download,../../Dataset Download/2021\haas-mini-program\components\das\src\service\service_fscan.c,"strcat(path_tmp, namelist[n]->d_name);",120,1,"            strcat(path_tmp, ""/"");
        }
        strcat(path_tmp, namelist[n]->d_name);
        
        _add_scan_path(path_tmp, 1);
"
2021\netifyd\src\nd-util.cpp,Dataset Download,../../Dataset Download/2021\netifyd\src\nd-util.cpp,"strcat(b, ((byte & i) == i) ? ""1"" : ""0"");",120,1,"    b[0] = '\0';
    for (i = 0x80000000; i > 0; i >>= 1)
        strcat(b, ((byte & i) == i) ? ""1"" : ""0"");

    nd_debug_printf(""%s"", b);
"
2021\pear\src\sdp_attribute.c,Dataset Download,../../Dataset Download/2021\pear\src\sdp_attribute.c,"strcat(sdp_attribute->attributes, attribute);",120,1,"  va_end(argptr);

  strcat(sdp_attribute->attributes, attribute);
  strcat(sdp_attribute->attributes, ""\\r\\n"");

"
2021\pear\src\sdp_attribute.c,Dataset Download,../../Dataset Download/2021\pear\src\sdp_attribute.c,"strcat(sdp_attribute->attributes, ""\\r\\n"");",120,1,"
  strcat(sdp_attribute->attributes, attribute);
  strcat(sdp_attribute->attributes, ""\\r\\n"");

  return 0;
"
2021\secure-iot-analysis-ecoin-platform\collector\collector.c,Dataset Download,../../Dataset Download/2021\secure-iot-analysis-ecoin-platform\collector\collector.c,"strcat(source,&argv[1][2]);",120,1,"				source = calloc(1,newLength);
				strcpy(source,prefix);
				strcat(source,&argv[1][2]);
				COLLECTOR_INTERFACE = source;
				printf(""Collector set to receive data on %s\n"",COLLECTOR_INTERFACE);
"
2021\tuya-iotos-embeded-sdk-wifi-ble-bk7231n\platforms\bk7231n\bk7231n_os\beken378\func\joint_up\role_launch.c,Dataset Download,../../Dataset Download/2021\tuya-iotos-embeded-sdk-wifi-ble-bk7231n\platforms\bk7231n\bk7231n_os\beken378\func\joint_up\role_launch.c,"strcat((char*)bssid_info.psk, (char*)temp);",120,1,"	{
		sprintf((char*)temp, ""%02x"", psk[i]);
		strcat((char*)bssid_info.psk, (char*)temp);
	}
	if (g_sta_param_ptr)
"
2021\tuya-iotos-embeded-sdk-wifi-ble-bk7231n\platforms\bk7231n\bk7231n_os\beken378\func\lwip_intf\lwip-2.0.2\src\core\memp.c,Dataset Download,../../Dataset Download/2021\tuya-iotos-embeded-sdk-wifi-ble-bk7231n\platforms\bk7231n\bk7231n_os\beken378\func\lwip_intf\lwip-2.0.2\src\core\memp.c,"strcat(errstr, desc->desc);",120,1,"    if (m[k] != 0xcd) {
      char errstr[128] = ""detected memp overflow in pool "";
      strcat(errstr, desc->desc);
      LWIP_ASSERT(errstr, 0);
    }
"
